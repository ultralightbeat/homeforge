import React, { Component } from 'react';
import Order from './Order';
import InputMask from 'react-input-mask';

/**
 * –§—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç React, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω–µ.
 * @returns {Component} –ö–æ–º–ø–æ–Ω–µ–Ω—Ç React, –æ—Ç–æ–±—Ä–∞–∂–∞—é—â–∏–π —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω–µ.
 */
const showNothing = () => {
  return (
    <div className='empty'>
      <h2>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h2>
    </div>
  );
};

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ–ø–ª–∞—Ç—ã.
 * @extends {Component}
 */
export  class PaymentModal extends Component {
  /**
   * –°–æ–∑–¥–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä PaymentModal.
   * @param {object} props - –°–≤–æ–π—Å—Ç–≤–∞, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É.
   */
  constructor(props) {
    super(props);
    this.state = {
      address: '',
      cardNumber: '',
      cardExpiry: '',
      cardCVC: '',
      fullName: '',
      paymentMethod: null,
      isPaymentSuccessful: false,
      errorMessage: '',
      bonusPoints: '',
    };
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã.
   * @param {string} method - –í—ã–±—Ä–∞–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.
   */
  handlePaymentMethodChange = (method) => {
    this.setState({ paymentMethod: method });
  };

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö.
   * @param {object} e - –°–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–≤–æ–¥–∞.
   */
  handleChange = (e) => {
    this.setState({ [e.target.name]: e.target.value });
  };

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤.
   * @param {object} e - –°–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–≤–æ–¥–∞.
   */
  handleBonusPointsChange = (e) => {
    this.setState({ bonusPoints: e.target.value });
  };

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã.
   * @param {object} e - –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã.
   */
  handleSubmit = (e) => {
    e.preventDefault();
    const { paymentMethod, bonusPoints } = this.state;

    if (!paymentMethod) {
      this.setState({ errorMessage: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.' });
      return;
    }

    if (paymentMethod === 'bonuses' && (!bonusPoints || isNaN(bonusPoints) || bonusPoints <= 0)) {
      this.setState({ errorMessage: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤.' });
      return;
    }

    // –°–∏–º—É–ª–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ–ø–ª–∞—Ç—É
    this.setState({ isPaymentSuccessful: true, errorMessage: '' }, () => {
      setTimeout(() => {
        this.props.onClose(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.props.onClearCart(); // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
      }, 2000); // –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    });
  };

  /**
   * –í—ã—á–∏—Å–ª—è–µ—Ç –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤.
   * @returns {string} –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤.
   */
  calculateTotal = () => {
    return this.props.itemsForPayment
      .reduce((total, item) => total + item.price * item.count, 0)
      .toFixed(2);
  };

  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
   * @returns {JSX.Element} –≠–ª–µ–º–µ–Ω—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ–ø–ª–∞—Ç—ã.
   */
  render() {
    const { paymentMethod, isPaymentSuccessful, errorMessage, bonusPoints } = this.state;

    if (isPaymentSuccessful) {
      return (
        <div className="payment-success">
          <h2>–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ. –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!</h2>
        </div>
      );
    }

    return (
      <div className="payment-modal-content shop-cart">
        <div className="order-items-container">
          <h3>–¢–æ–≤–∞—Ä—ã</h3>
          {this.props.itemsForPayment.length > 0 ? (
            <>
              <div className="order-items">
                {this.props.itemsForPayment.map((item) => (
                  <Order key={item.id} item={item} onDelete={this.props.onDelete} />
                ))}
              </div>
              <div className="total">
                <h3>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {this.calculateTotal()}$</h3>
              </div>
            </>
          ) : (
            showNothing()
          )}
        </div>
        <div className="payment-form-container">
          <h3>–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã</h3>
          <form onSubmit={this.handleSubmit} className="payment-form">
            <div>
              <label>–§–ò–û:</label>
              <input
                type="text"
                name="fullName"
                value={this.state.fullName}
                onChange={this.handleChange}
                required
              />
            </div>
            <div>
              <label>–ê–¥—Ä–µ—Å:</label>
              <input
                type="text"
                name="address"
                value={this.state.address}
                onChange={this.handleChange}
                required
              />
            </div>
            <h3>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</h3>
            <div className="payment-buttons-method">
              <button type="button" className="button-card" onClick={() => this.handlePaymentMethodChange('card')}>–ö–∞—Ä—Ç–æ–π</button>
              <button type="button" className="button-bonus" onClick={() => this.handlePaymentMethodChange('bonuses')}>–ë–æ–Ω—É—Å–∞–º–∏</button>
            </div>

            {errorMessage && (
              <div className="error-message">
                {errorMessage}
              </div>
            )}

            {paymentMethod === 'card' && (
              <div className="payment-form-information">
                <div>
                  <label>–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã:</label>
                  <InputMask
                    mask="9999 9999 9999 9999"
                    maskChar=" "
                    name="cardNumber"
                    value={this.state.cardNumber}
                    onChange={this.handleChange}
                    required
                  >
                    {(inputProps) => <input {...inputProps} type="text" />}
                  </InputMask>
                </div>
                <div>
                  <label>–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:</label>
                  <InputMask
                    mask="99/99"
                    maskChar=" "
                    name="cardExpiry"
                    value={this.state.cardExpiry}
                    onChange={this.handleChange}
                    required
                  >
                    {(inputProps) => <input {...inputProps} type="text" />}
                  </InputMask>
                  </div>
                <div>
                  <label>CVV:</label>
                  <InputMask
                    mask="999"
                    maskChar=" "
                    name="cardCVC"
                    value={this.state.cardCVC}
                    onChange={this.handleChange}
                    required
                  >
                    {(inputProps) => <input {...inputProps} type="text" />}
                  </InputMask>
                </div>
              </div>
            )}

            {paymentMethod === 'bonuses' && (
              <div className='bonuses-info'>
                <p>–í–∞—à–∏ –±–æ–Ω—É—Å—ã: 1000 üéüÔ∏è</p>
                <input
                  type="number"
                  name="bonusPoints"
                  value={bonusPoints}
                  onChange={this.handleBonusPointsChange}
                  min="1"
                  required
                />
              </div>
            )}
            <div className="payment-buttons">
              <button type="submit" className="button">–û–ø–ª–∞—Ç–∏—Ç—å</button>
              <button type="button" className="close-modal-button" onClick={this.props.onClose}>–ó–∞–∫—Ä—ã—Ç—å</button>
            </div>
          </form>
        </div>
      </div>
    );
  }
}
export default PaymentModal;
               
